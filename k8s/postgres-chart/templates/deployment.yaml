apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/version: "{{ .Values.version }}"
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: simple-backend
    app.kubernetes.io/managed-by: helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/version: "{{ .Values.version }}"
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: simple-backend
        app.kubernetes.io/managed-by: helm
    spec:
      containers:
        - name: loyalties
          image: "library/postgres:{{ .Values.version }}-alpine" #"cr.yandex/crpoaqoigck9sge4bf4s/postgres:{{ .Values.version }}-alpine"
          env:
            - name: POSTGRES_USER
              value: {{ .Values.default_database.user }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.default_database.password }}
            - name: POSTGRES_DB
              value: loyalties
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          ports:
            - name: loyalties
              containerPort: 5432
          volumeMounts:
            - name: db-loyalties
              mountPath: /var/lib/postgresql/data
            - name: postgres-config-map
              mountPath: /docker-entrypoint-initdb.d/init_db.sql
        
        
        - name: payments
          image: "library/postgres:{{ .Values.version }}-alpine" #"cr.yandex/crpoaqoigck9sge4bf4s/postgres:{{ .Values.version }}-alpine"
          env:
            - name: POSTGRES_USER
              value: {{ .Values.default_database.user }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.default_database.password }}
            - name: POSTGRES_DB
              value: payments
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          ports:
            - name: payments
              containerPort: 5433
          volumeMounts:
            - name: db-payments
              mountPath: /var/lib/postgresql/data
        
        
        - name: reservations
          image: "library/postgres:{{ .Values.version }}-alpine" #"cr.yandex/crpoaqoigck9sge4bf4s/postgres:{{ .Values.version }}-alpine"
          env:
            - name: POSTGRES_USER
              value: {{ .Values.default_database.user }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.default_database.password }}
            - name: POSTGRES_DB
              value: reservations
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          ports:
            - name: reservations
              containerPort: 5434
          volumeMounts:
            - name: db-reservations
              mountPath: /var/lib/postgresql/data
            - name: postgres-config-map
              mountPath: /docker-entrypoint-initdb.d/init_db.sql
        
      volumes:
        - name: db-loyalties
        - name: db-payments
        - name: db-reservations
        - name: postgres-config-map
          configMap:
            name: {{ .Release.Name }}-configmap