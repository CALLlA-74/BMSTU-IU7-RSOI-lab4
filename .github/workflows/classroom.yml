name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install the necessary packages
        run: pip3.10 install -r services/gateway_service/requirements.txt

      - name: Run unit tests for loyalty service
        run: pytest -vs services/loyalty_service/app/unit_tests/tests.py
  
  docker-hub:
    name: Push docker hub
    runs-on: ubuntu-latest
    steps:
      
    
  
  deploy:
    name: Deploy service and run api-test
    needs: [unit-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2
      
      - name: Docker build
        timeout-minutes: 2
        run:  docker compose build

      - name: Docker Hub login
        env:
          CRYANDEX_PASSWORD: ${{ secrets.CRYANDEX_PASSWORD }}
        run: echo "$CRYANDEX_PASSWORD" | docker login -u oauth --password-stdin cr.yandex

      - name: Docker Publish
        run: docker compose push

      - name: Install Helm
        uses: azure/setup-helm@v3
 
      - name: Prepare Kube config
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
          KUBECONFIG_CA_FILE: '${{ secrets.KUBECONFIG_CA }}'
        run: |
          echo "$KUBECONFIG_FILE" > ./kube.config 
          echo "$KUBECONFIG_CA_FILE" > ./
 
      
      #- name: Send project files on VM
      #  uses: appleboy/scp-action@v0.1.4
      #  with:
      #    host: ${{ secrets.SSH_HOST }}
      #    username: ${{ secrets.SSH_USER }}
      #    key: ${{ secrets.SSH_PRIVATE_KEY }}
      #    passphrase: ${{ secrets.SSH_PASSWORD }}
      #    port: ${{ secrets.SSH_PORT }}
      #    source: "services,scripts,Dockerfile,docker-compose.yml"
      #    target: /home/${{ secrets.SSH_USER }}/hotel_booking_system
      #
      #- name: Build and up hotel-booking-system
      #  uses: appleboy/ssh-action@v1.0.0
      #  with:
      #    host: ${{ secrets.SSH_HOST }}
      #    username: ${{ secrets.SSH_USER }}
      #    key: ${{ secrets.SSH_PRIVATE_KEY }}
      #    passphrase: ${{ secrets.SSH_PASSWORD }}
      #    port: ${{ secrets.SSH_PORT }}
      #    script: |
      #      cd /home/${{ secrets.SSH_USER }}/hotel_booking_system
      #      echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose down
      #      echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker rmi gateway_service
      #      echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker rmi payment_service
      #      echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker rmi loyalty_service
      #      echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker rmi reservation_service
      #      echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose build
      #      echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d
      #      echo ${{ secrets.SSH_PASSWORD }} | sudo ./scripts/wait-script.sh
      #  
      #  
      #  
      #  
      #- name: Run API Tests
      #  uses: matt-ball/newman-action@master
      #  with:
      #    collection: v2/postman/collection.json
      #    environment: v2/postman/environment.json
      #    delayRequest: 15
      #    reporters: '[ "cli" ]'
      #    
      #- name: Autograding
      #  uses: education/autograding@v1
      #  continue-on-error: true
    
      